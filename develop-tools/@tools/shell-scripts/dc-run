#!/bin/bash

# Run docker-compose yml with console
#  1. Start into console(of the main service);
#  2. When exit, all containers should be stoped and removed;
#  3. Requirement:
#    1)The container MUST start into console(for example, run 'bash', or run 'su - u01' ...);
#    2)Use the name of "main" service as docker-compose yml file's name(for example, 'nodejs.yml' MUST has a service 'nodejs');

SHELL_FILE=$(realpath "$0")
SHELL_DIR=$(cd "$(dirname "$SHELL_FILE")"; pwd)

COMPOSE_TYPE="compose-tools"
source "$SHELL_DIR/lib/prepare"

CMD="docker-compose -f $YML_FILE run --service-ports $1"
echo "${bldblu}NOTE:${txtrst} Start containers: ${bldgrn}$CMD${txtrst} ..."
$CMD

# remove stopped containers - always just current "main" container itself.
echo "${bldblu}NOTE:${txtrst} Current 'main' container stopped, remove it ..."
docker-compose -f $YML_FILE rm -f

# if all "main" container instance removed, stop and remove other linked containers
echo "${bldblu}INFO:${txtrst} Check running 'main' containers ..."
docker-compose -f $YML_FILE ps | grep "_${COMPOSE_NAME}_run_"
if [ $? -eq 1 ]; then
    echo "${bldblu}NOTE:${txtrst} All 'main' containers stopped, now stop linked containers ..."
    docker-compose -f $YML_FILE stop
    docker-compose -f $YML_FILE rm -f
fi

echo "${bldblu}INFO:${txtrst} ${bldgrn}OK.${txtrst}"